# Copyright 2019 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "frontend.conf"

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.mobiletokenproxy.config.RoutingHttpRequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.FrontendModule"

play.modules.enabled += "uk.gov.hmrc.mobiletokenproxy.config.GuiceModule"

play.http.filters = "uk.gov.hmrc.mobiletokenproxy.config.ApiGatewayProxyFilters"

play.http.errorHandler = "uk.gov.hmrc.mobiletokenproxy.config.ErrorHandler"

appName = "mobile-token-proxy"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global= uk.gov.hmrc.mobiletokenproxy.config.ApplicationGlobal

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes


# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and 
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule. 

controllers {

  com.kenshoo.play.metrics.MetricsController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }

  uk.gov.hmrc.mobiletokenproxy.controllers.MobileTokenProxy = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }
}

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root = ERROR

# Logger used by the framework:
logger.play = INFO

# Logger provided to your application:
logger.application = DEBUG

google-analytics {
  token = N/A
  host = auto
}

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = false
}

router {
  regex = "208606423740|167927702220"
  prefix = "/sandbox"
  header = "X-MOBILE-USER-ID"
}

assets {
  url = "http://localhost:9032/assets/"
  version = ${?govuk-tax.Prod.assets.version}
  version = ${?ASSETS_FRONTEND_VERSION}
  minified = true
  minified = ${?ASSETS_FRONTEND_MINIFIED}
  version = 2.147.0
}

api-gateway {
  client_id = "i_whTXqBWq9xj0BqdtJ4b_YaxV8a"
  client_secret = "e8ad0345-aaed-48e0-bc76-ebcb727fbb86"
  redirect_uri = "urn:ietf:wg:oauth:2.0:oob:auto"
  pathToAPIGatewayTokenService = "http://localhost:8236/oauth/token"
  pathToAPIGatewayAuthService = "http://localhost:8236/oauth/authorize"
  scope = "read:personal-income+read:customer-profile+read:messages+read:submission-tracker+read:web-session+read:native-apps-api-orchestration"
  response_type = "code"
  proxyPassthroughHttpHeaders = []
  expiry_decrement = 600
}

aes.key = "AAECAwQFBgcICQoLDA0ODw=="

microservice {
  metrics {
    graphite {
      host = graphite
      port = 2003
      prefix = play.${appName}.
      enabled = false
    }
  }

  services {
    mobile-auth-stub {
      host = localhost
      port = 9025
    }
  }
}

auditing {
  enabled = true
  traceRequests = true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}
